// Package resources provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package resources

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"encoding/json"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for CapabilitiesResponseDataMethods.
const (
	DELETE CapabilitiesResponseDataMethods = "DELETE"
	GET    CapabilitiesResponseDataMethods = "GET"
	PATCH  CapabilitiesResponseDataMethods = "PATCH"
	POST   CapabilitiesResponseDataMethods = "POST"
)

// Defines values for IdentityProviderSyncMode.
const (
	Import IdentityProviderSyncMode = "import"
)

// Defines values for PatchRequestBodyOp.
const (
	Add    PatchRequestBodyOp = "add"
	Remove PatchRequestBodyOp = "remove"
	Update PatchRequestBodyOp = "update"
)

// CapabilitiesResponse defines model for CapabilitiesResponse.
type CapabilitiesResponse struct {
	Data []struct {
		Endpoint string                            `json:"endpoint"`
		Methods  []CapabilitiesResponseDataMethods `json:"methods"`
	} `json:"data"`
}

// CapabilitiesResponseDataMethods defines model for CapabilitiesResponse.Data.Methods.
type CapabilitiesResponseDataMethods string

// Entitlement defines model for Entitlement.
type Entitlement = string

// Entity defines model for Entity.
type Entity = map[string]interface{}

// EntityEntitlement defines model for EntityEntitlement.
type EntityEntitlement struct {
	Entitlement *Entitlement `json:"entitlement,omitempty"`
	Entity      *Entity      `json:"entity,omitempty"`
	Id          *string      `json:"id,omitempty"`
}

// EntityEntitlementPatchRequestBody defines model for EntityEntitlementPatchRequestBody.
type EntityEntitlementPatchRequestBody = []interface{}

// EntityEntitlements defines model for EntityEntitlements.
type EntityEntitlements struct {
	Data []EntityEntitlement `json:"data"`
}

// Group defines model for Group.
type Group struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// Groups defines model for Groups.
type Groups struct {
	Data []Group `json:"data"`
}

// Identities defines model for Identities.
type Identities struct {
	Data []Identity `json:"data"`
}

// Identity defines model for Identity.
type Identity struct {
	AddedBy     string   `json:"addedBy"`
	Certificate *string  `json:"certificate,omitempty"`
	Email       string   `json:"email"`
	FirstName   *string  `json:"firstName,omitempty"`
	Groups      *float32 `json:"groups,omitempty"`
	Id          *string  `json:"id,omitempty"`
	Joined      *string  `json:"joined,omitempty"`
	LastLogin   *string  `json:"lastLogin,omitempty"`
	LastName    *string  `json:"lastName,omitempty"`
	Permissions *float32 `json:"permissions,omitempty"`
	Roles       *float32 `json:"roles,omitempty"`
	Source      string   `json:"source"`
}

// IdentityProvider defines model for IdentityProvider.
type IdentityProvider struct {
	AcceptsPromptNone   *bool                     `json:"acceptsPromptNone,omitempty"`
	AccountLinkingOnly  *bool                     `json:"accountLinkingOnly,omitempty"`
	ClientID            *string                   `json:"clientID,omitempty"`
	ClientSecret        *string                   `json:"clientSecret,omitempty"`
	DisableIdentityInfo *bool                     `json:"disableIdentityInfo,omitempty"`
	Enabled             *bool                     `json:"enabled,omitempty"`
	Id                  *string                   `json:"id,omitempty"`
	IdentityCount       *float32                  `json:"identityCount,omitempty"`
	Name                *string                   `json:"name,omitempty"`
	RedirectUrl         *string                   `json:"redirectUrl,omitempty"`
	StoreTokens         *bool                     `json:"storeTokens,omitempty"`
	StoreTokensReadable *bool                     `json:"storeTokensReadable,omitempty"`
	SyncMode            *IdentityProviderSyncMode `json:"syncMode,omitempty"`
	TrustEmail          *bool                     `json:"trustEmail,omitempty"`
}

// IdentityProviderSyncMode defines model for IdentityProvider.SyncMode.
type IdentityProviderSyncMode string

// IdentityProviders defines model for IdentityProviders.
type IdentityProviders struct {
	Data []IdentityProvider `json:"data"`
}

// PatchRequestBody defines model for PatchRequestBody.
type PatchRequestBody = []struct {
	Op    PatchRequestBodyOp `json:"op"`
	Value []struct {
		Id string `json:"id"`
	} `json:"value"`
}

// PatchRequestBodyOp defines model for PatchRequestBody.Op.
type PatchRequestBodyOp string

// Resource defines model for Resource.
type Resource struct {
	Entity Entity    `json:"entity"`
	Id     string    `json:"id"`
	Name   string    `json:"name"`
	Parent *Resource `json:"parent,omitempty"`
}

// Resources defines model for Resources.
type Resources struct {
	Data []Resource `json:"data"`
}

// Response defines model for Response.
type Response struct {
	Links struct {
		Next struct {
			Href string `json:"href"`
		} `json:"next"`
	} `json:"_links"`
	Meta struct {
		Page  float32 `json:"page"`
		Size  float32 `json:"size"`
		Total float32 `json:"total"`
	} `json:"_meta"`
	Data    []map[string]interface{} `json:"data"`
	Message string                   `json:"message"`
	Status  float32                  `json:"status"`
}

// Role defines model for Role.
type Role struct {
	Entitlements *[]struct {
		Entitlement *string `json:"entitlement,omitempty"`
		Entity      *Entity `json:"entity,omitempty"`
		Resource    *string `json:"resource,omitempty"`
	} `json:"entitlements,omitempty"`
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// Roles defines model for Roles.
type Roles struct {
	Data []Role `json:"data"`
}

// FilterParam defines model for FilterParam.
type FilterParam = string

// PaginationPage defines model for PaginationPage.
type PaginationPage = float32

// PaginationSize defines model for PaginationSize.
type PaginationSize = float32

// BadRequest defines model for BadRequest.
type BadRequest = Response

// NotFound defines model for NotFound.
type NotFound = Response

// Unauthorized defines model for Unauthorized.
type Unauthorized = Response

// Default defines model for default.
type Default = Response

// GetAuthenticationParams defines parameters for GetAuthentication.
type GetAuthenticationParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetAuthenticationProvidersParams defines parameters for GetAuthenticationProviders.
type GetAuthenticationProvidersParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetEntitlementsParams defines parameters for GetEntitlements.
type GetEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsParams defines parameters for GetGroups.
type GetGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// PutGroupsItemJSONBody defines parameters for PutGroupsItem.
type PutGroupsItemJSONBody struct {
	union json.RawMessage
}

// GetGroupsItemEntitlementsParams defines parameters for GetGroupsItemEntitlements.
type GetGroupsItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetGroupsItemIdentitiesParams defines parameters for GetGroupsItemIdentities.
type GetGroupsItemIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetGroupsItemRolesParams defines parameters for GetGroupsItemRoles.
type GetGroupsItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetIdentitiesParams defines parameters for GetIdentities.
type GetIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetIdentitiesItemEntitlementsParams defines parameters for GetIdentitiesItemEntitlements.
type GetIdentitiesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetIdentitiesItemGroupsParams defines parameters for GetIdentitiesItemGroups.
type GetIdentitiesItemGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetIdentitiesItemRolesParams defines parameters for GetIdentitiesItemRoles.
type GetIdentitiesItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// GetResourcesParams defines parameters for GetResources.
type GetResourcesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page       *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
	EntityType *string         `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// GetRolesParams defines parameters for GetRoles.
type GetRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// PatchRolesItemJSONBody defines parameters for PatchRolesItem.
type PatchRolesItemJSONBody struct {
	union json.RawMessage
}

// GetRolesItemEntitlementsParams defines parameters for GetRolesItemEntitlements.
type GetRolesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`
}

// PostAuthenticationJSONRequestBody defines body for PostAuthentication for application/json ContentType.
type PostAuthenticationJSONRequestBody = IdentityProvider

// PutAuthenticationItemJSONRequestBody defines body for PutAuthenticationItem for application/json ContentType.
type PutAuthenticationItemJSONRequestBody = IdentityProvider

// PostGroupsJSONRequestBody defines body for PostGroups for application/json ContentType.
type PostGroupsJSONRequestBody = Group

// PutGroupsItemJSONRequestBody defines body for PutGroupsItem for application/json ContentType.
type PutGroupsItemJSONRequestBody PutGroupsItemJSONBody

// PatchGroupsItemEntitlementsJSONRequestBody defines body for PatchGroupsItemEntitlements for application/json ContentType.
type PatchGroupsItemEntitlementsJSONRequestBody = EntityEntitlementPatchRequestBody

// PatchGroupsItemIdentitiesJSONRequestBody defines body for PatchGroupsItemIdentities for application/json ContentType.
type PatchGroupsItemIdentitiesJSONRequestBody = PatchRequestBody

// PatchGroupsItemRolesJSONRequestBody defines body for PatchGroupsItemRoles for application/json ContentType.
type PatchGroupsItemRolesJSONRequestBody = PatchRequestBody

// PostIdentitiesJSONRequestBody defines body for PostIdentities for application/json ContentType.
type PostIdentitiesJSONRequestBody = Identity

// PutIdentitiesItemJSONRequestBody defines body for PutIdentitiesItem for application/json ContentType.
type PutIdentitiesItemJSONRequestBody = Identity

// PatchIdentitiesItemEntitlementsJSONRequestBody defines body for PatchIdentitiesItemEntitlements for application/json ContentType.
type PatchIdentitiesItemEntitlementsJSONRequestBody = EntityEntitlementPatchRequestBody

// PatchIdentitiesItemGroupsJSONRequestBody defines body for PatchIdentitiesItemGroups for application/json ContentType.
type PatchIdentitiesItemGroupsJSONRequestBody = PatchRequestBody

// PatchIdentitiesItemRolesJSONRequestBody defines body for PatchIdentitiesItemRoles for application/json ContentType.
type PatchIdentitiesItemRolesJSONRequestBody = PatchRequestBody

// PostRolesJSONRequestBody defines body for PostRoles for application/json ContentType.
type PostRolesJSONRequestBody = Role

// PatchRolesItemJSONRequestBody defines body for PatchRolesItem for application/json ContentType.
type PatchRolesItemJSONRequestBody PatchRolesItemJSONBody

// PatchRolessItemEntitlementsJSONRequestBody defines body for PatchRolessItemEntitlements for application/json ContentType.
type PatchRolessItemEntitlementsJSONRequestBody = EntityEntitlementPatchRequestBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xdW3PbNvb/Khj8/08ZxnK22Rc9rZukqbvZ2OM4sw+tpwORRxJqEGAB0Iqa0XffAcA7",
	"wYtsx1YqPtkSgYODg9+54OCA+opDESeCA9cKz7/ihEgSgwZpP/1EmQZ5ab4zHyNQoaSJpoLjOT5DSkvK",
	"V0gLtLQNkQSVMq3QYosDTE2jP1OQ5gMnMeA5du1wgFW4hpgYonqbmCeOFt7tAnxJVpQTM8olWUF74Os1",
	"IAmhkBESy6UCbTiQoFPJCw6WUsQdPCSGaJWDmHIapzGevwpybngaL0A2uPlE/+rgxjVHYpnxpSocJU4u",
	"ieAKOjhShnCNI/Il4+j0NOjlbxfgnLhdsR9JdAV/pqC0+RQKroHbf0mSMBraecz+UIbzrxi+kDhhdk6/",
	"M8pvLQUOX2yHtYQlnmMrg99j0MTBwyzIaeBYNv9ooQnD89NdgCNiGv16E+AYlLItDT9IZgwFWGmiU4Xn",
	"r09N+3K+/+/G+r9ZCcaZe6pmV7ns7GTrsjfU8+nuAvxR6J9EyqPDmPpHodHSslOd+OtHmXhJexfgz5yk",
	"ei0k/QsOZOo1jqqzf/Uos6+Rt0+XJGX6UOYOXxIINUQIpBSyMv9/PhLsW0PsCrJ2Qm9IQhaUUU1BFXTM",
	"XKRIQJpvrRkjboZUQ6zaj4FHiaBOlA0bbaar1yJSte7AjY36Fb9/d40DfHnxyfx5++7Du+t35vPZ9Zuf",
	"8U3QppV9QaQkW+wM2p8plQbLv5ZclGOWNMTiDwj1IA07UV+vd1xTzSDOAJOBQ5k+EohBbgRKS2FMNYmi",
	"lyETaeSdg6W0bRD5immE5zhNqSGV9TEAlYIxY71vgoa/te0zqp5RqpOyDwPTo3Nm28b8mutbe9iHxSqd",
	"XeB6bkd12pr2NPL7+WGuL4kO15mB/1FEdkzC2MXSSrdv9FbPXdCJ9DvCUqhBeXheDZH04s/RH4btjU8E",
	"aoTiPi67neryXoo0abPjXd48tvGte3Uw26pzsIdO3nF87wmfRxbq2cgP4CMjtH0wK9s2IySKIPqxaXuw",
	"uK1RKtclNF2XxjGCd90gJpR5nyypVPqjf1kDvCoWrBGjBl0I+UNQDv5HjCj9Qawo73zayUcCMqZKUcH9",
	"zEjBwP9EiVSG0BQkfNEgOWE2ds/+bcu16basEAuSQbFKfWt7KcUdjUB61jgMIdHqUoo40R8Fr858IQQD",
	"wg0hEoYi5foD5beUry442/rbhYwC1+dvvfJzDz9BKMHv+yOqyIJBzvU5Xwr/MMBNu8j/sAMTNKP6xkzE",
	"u0q8a+ElRFRCqD9LP3yVFhKuxS3UgFFhqdLgCkhkmO9ouOXhf0QE1aiHxomQ2h/gyFTpdw21KsjtRiDi",
	"sexPgbB72yGfR+5wqyKpyodEJghKk8jYHTNYLO7AK662Ox7hbxr8d4RFvXMWCQ5G++oAX0FpLzyR1UPj",
	"oxLoVWNENmoG6cuN2fD6ZJcQOSKeK1j3iC0bt4jyfKLI+z8UliUf94Vj9+6m3N7Vv883e/Vv3dZvCFW2",
	"VZuNZkhjRvAxW+4pa2MnWZKr7Y+yfFPrQbYD/erJVlUZyRNdLrvkOvn4aq3ZIPaL3a7XzLrN7hB3dtSS",
	"VNExl1OQL6F33QWD3i2N6t3Z1nY+7QhoT/2VFUswYpfTFOa3iZ+v8jDnIfpppHxP3TTNaBYamD0vCd0e",
	"27lBzNJbONmAYrB9uTbb4e2/QsIFpyFhJ6HN3WbJ0Q/pLaD/upY/25a4lRC5XgNaCsbEhvIVUgmELsKl",
	"giORakY5KKTXgM4uz1HOPFoKab/86f0ZIlFMOVVauk5LafNIEdIC2aiPhBptqF4jwtFFAtz0oVxpwkNA",
	"ei1FulojghIpojTUygx0gq7XVCGqTB+4E+yuzRxRSMKSuVwO5ZadO5Ames2Syie/caO8BrB4jt/kMiqY",
	"OKszfukYQG9EnBBNbRZoa7gxvs0RxnN8enJ68urUyFEkwElC8Rz/cPLq5BQbF6LXFhkzkuq10QXHq/lq",
	"5ULCpvCpQnmeBjGqtEKEMZSFf0YmLohxUzFotATPIzzH70Gf1Yep50Q6tvllk1kjP2/2+aN72POF3U0j",
	"h/6P09MRqcQyjTcuI1Em9II9M3EPMhClS3+svNmNJyN58W9D7bUTnE8KhYBnlRMK2+XVcJdmvvf16evh",
	"TsVhQD1B3N8pb2gTqmkcE7k1JogqjULBl3SVGsNRV4wKwI2mkpWL1OqovjHBmVAe9XmT00UEcdh0ET9p",
	"qc6lUG3dkfXQfDSG99s91JGiZQq7B+rQ/uMfEwD3wEgn/nZB06LPkur2coRtV2uRsig/2CTW1iOxzMdX",
	"6JaLDTc+0/gxtVUa4sC62WwPgy5uNQnQeyFWDAL0nuqf0wUCHZ78lp6e/hAuJJrZ/+A3/uLF9cXbixcv",
	"5ugl+mSd5taSzUY3RmmMPym30N+fY7nv+dDfWxmuLABcPJcjUKVJIqQNojJjMdIqe7TiK412ThMYaM+B",
	"/5VNXZigrkMNC1dhv24b7reWcB2m5xpi7IfLca3t3rLtcbhek/YeNCJIUb5iMN7ZtuxKz4J9y8BxHz+p",
	"jjFWG7u8fXFa3U3Yih2zKyr3pDaorgdAfSVNNwFOUg8UP9ts6AMsyWXahcqDigKPCX/3WNNe5xRWajlG",
	"hmkbyhhaAEoVRGjhoqZqQiMy2I4pB7RZ03CNPp8jyLJmeYi3gGL7XiY3YpIklK9O0BljiNwRykyLYtxq",
	"Z+OXIUJrMCErE3zlkieGk7JjVtDhNbbVEpYDM7Pe6hqj44Qx8RTj1EpMshKkar0OntHy4LpSq+NKc252",
	"N51uYTDOKteaGhYMZnKMUZf0quC5Bl2H5maGtgPNgJorWpRQ2sDfQTzfCawB/fLp4iPKFF85fYtFBMyL",
	"rVp1xdPvCoZ7VMtunyM7tVc9ydFGGXW9KOWBKHd4XAoZE13ViBr82xoxk2TTqxUavuhZwggd0gdJNqPV",
	"4YpsGhoxgLeSizrSmmHPhIkSE0TZNTGiGwBEWUfTvX1hDLlm3gXNSqcmy7afZcvEdqx7phqmcnxmYOzJ",
	"Xkuw4a5NS9rW/kR1gclvsTXJyvyeNitdGfSoUtHeBW/hpbRko/NpXfBx6TIHoClNVkuT9SzAmOxXh8AL",
	"F3KAOa4jN9KtlfMZ6qdOX3Xa/bSJo/uZfsK3IyCU2eObKS3Vl5Yab7LH7dXt0biru60HvCYSttTQmqgB",
	"G/PMG/Jph32oNRejgPVUJpDocO25BR1FSEgkc4/sZVnMllLEPZbS0O7Uh/3sZpkdtHdDznjkogWL2UK8",
	"Z7w4kxdLtBCuso1EESI8ymdTMFkURhtpigTPs3Lu8staTWV+e64spPRebKtehQtqTXY3RknsQFmheHWs",
	"Rsub3ehLlcMXzHbtK9WTOTgAc3BPNRt0crR2xaszZDZGp2xqVIaMip7Pq4n4I/drFVkccca4E0WH5MYq",
	"TO7ru2qI/x4811P4HZ+beexc1aSt38zd9KvDoI8pbpz2uhfbarxncfc7jt6pODEcsT/xweawdkSGw0Jv",
	"it3boCPJAT75kMmH/C22LN164PUgI3cm+Wlz2dzrOJ51I/J9nwtP+xY/xnLUVoDafU58Zm1rUZ3vPyR+",
	"wN5hvxrW57rBhI/SCDbW3YubusXb4w5GN6LcuXGJqensuHHFYnBRxpwhd8u/5nUO97rEEdt17yJ2mfWn",
	"vxTR4yxSH7QOwl8c512H+9j3PQ6YWweAxS2/rsPlOjymA+bpRMl7wDwIrKe0hmPSKRWGy1xkr6k0VHu1",
	"YTpeno6Xp+PlPZVstJMbKOe3Vsi1qdsfqhBBMWTvlR/h456t6n8q4z8kjzYOS4fm1mrsjjty7kD/dFzQ",
	"fVywm87uDtDbDGF/tKvpP2e21sGdFhKl6IpDlL+pZ48cznTsfNzQHYmi78S/mImMci/TYfTkXf5W3iVH",
	"fqdzkdV3PPcWLuWng+WLPYq+/vvmBeVnOYn2/QCXE8+1+0mVEpGeC/jbBIq73dvKL5/ZXzzzWKeD0ohC",
	"8NMbG7rQmutDCf9MHUbV8OXEbWs/+J8pfvq+SzCOvsqvBawCp1YyI+/nd4Q7Qun7xTcj31Rp3yL++AUX",
	"D3mF+TFf2m+6/hxChZkbrL5wlRWd8bN7bCE11VxY+bcE1lbf4UoLv7Bzn3KABRZHbbVby+ax2E9+Ub9n",
	"v1sH0be8qO9M8nRPv/+e/jgrPa6GIo8iaqfd9srAsE2ZSiem09KuqLQbT09k7B7jSv6QTZxKJqaSickI",
	"PPRGfp87UxuyWoE8yRduxCuOZeXdtNU30V4kwM8uz+2vLAXZ643D/KXE9n3ISyFRBIt0taJ8FaCFFBtl",
	"/zPdIqpCcQdyG9gfpWhZhU+O019U9lsrD8DkqJdldr6PtzpPRBQi2RtHaV3K9ofUHDQVyLvc+NYHShgJ",
	"YS1YBBIHOJUMz/Fa60TNZ7PKs5NQxLO7V9YlZ/RbhpeXK2TfM20eLlwOuvoyYGPgsl/jKs1/7W3BRgU9",
	"x5eEseZrtbO3G5f5vJJi433abZpnKDTGLnS/E1a931L1SmWV+CCBVV6FkHXOPg93lFn+JevnPg53g7pb",
	"qmazC8s0PHYlH5+PX80U/y8AAP//eoDodSOEAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
