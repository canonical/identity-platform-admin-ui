// Package resources provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package resources

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for CapabilityMethods.
const (
	DELETE CapabilityMethods = "DELETE"
	GET    CapabilityMethods = "GET"
	PATCH  CapabilityMethods = "PATCH"
	POST   CapabilityMethods = "POST"
)

// Defines values for GroupEntitlementsPatchItemOp.
const (
	GroupEntitlementsPatchItemOpAdd    GroupEntitlementsPatchItemOp = "add"
	GroupEntitlementsPatchItemOpRemove GroupEntitlementsPatchItemOp = "remove"
)

// Defines values for GroupIdentitiesPatchItemOp.
const (
	GroupIdentitiesPatchItemOpAdd    GroupIdentitiesPatchItemOp = "add"
	GroupIdentitiesPatchItemOpRemove GroupIdentitiesPatchItemOp = "remove"
)

// Defines values for GroupRolesPatchItemOp.
const (
	GroupRolesPatchItemOpAdd    GroupRolesPatchItemOp = "add"
	GroupRolesPatchItemOpRemove GroupRolesPatchItemOp = "remove"
)

// Defines values for IdentityEntitlementsPatchItemOp.
const (
	IdentityEntitlementsPatchItemOpAdd    IdentityEntitlementsPatchItemOp = "add"
	IdentityEntitlementsPatchItemOpRemove IdentityEntitlementsPatchItemOp = "remove"
)

// Defines values for IdentityGroupsPatchItemOp.
const (
	IdentityGroupsPatchItemOpAdd    IdentityGroupsPatchItemOp = "add"
	IdentityGroupsPatchItemOpRemove IdentityGroupsPatchItemOp = "remove"
)

// Defines values for IdentityProviderSyncMode.
const (
	Import IdentityProviderSyncMode = "import"
)

// Defines values for IdentityRolesPatchItemOp.
const (
	IdentityRolesPatchItemOpAdd    IdentityRolesPatchItemOp = "add"
	IdentityRolesPatchItemOpRemove IdentityRolesPatchItemOp = "remove"
)

// Defines values for RoleEntitlementsPatchItemOp.
const (
	Add    RoleEntitlementsPatchItemOp = "add"
	Remove RoleEntitlementsPatchItemOp = "remove"
)

// Capabilities defines model for Capabilities.
type Capabilities struct {
	Data []Capability `json:"data"`
}

// Capability defines model for Capability.
type Capability struct {
	Endpoint string              `json:"endpoint"`
	Methods  []CapabilityMethods `json:"methods"`
}

// CapabilityMethods defines model for Capability.Methods.
type CapabilityMethods string

// Entity defines model for Entity.
type Entity = map[string]interface{}

// EntityEntitlement defines model for EntityEntitlement.
type EntityEntitlement struct {
	EntitlementType string `json:"entitlement_type"`
	EntityName      string `json:"entity_name"`
	EntityType      string `json:"entity_type"`
}

// EntityEntitlementItem defines model for EntityEntitlementItem.
type EntityEntitlementItem struct {
	Entitlement EntityEntitlement `json:"entitlement"`
}

// GetCapabilitiesResponse defines model for GetCapabilitiesResponse.
type GetCapabilitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Capability  `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetEntitlementsResponse defines model for GetEntitlementsResponse.
type GetEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupEntitlementsResponse defines model for GetGroupEntitlementsResponse.
type GetGroupEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupIdentitiesResponse defines model for GetGroupIdentitiesResponse.
type GetGroupIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupRolesResponse defines model for GetGroupRolesResponse.
type GetGroupRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupsResponse defines model for GetGroupsResponse.
type GetGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentitiesResponse defines model for GetIdentitiesResponse.
type GetIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityEntitlementsResponse defines model for GetIdentityEntitlementsResponse.
type GetIdentityEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetIdentityGroupsResponse defines model for GetIdentityGroupsResponse.
type GetIdentityGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityProvidersResponse defines model for GetIdentityProvidersResponse.
type GetIdentityProvidersResponse struct {
	Links ResponseLinks `json:"_links"`
	Meta  ResponseMeta  `json:"_meta"`
	Data  []struct {
		Id   string `json:"id"`
		Name string `json:"name"`
	} `json:"data"`
	Message string `json:"message"`
	Status  int    `json:"status"`
}

// GetIdentityRolesResponse defines model for GetIdentityRolesResponse.
type GetIdentityRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetResourcesResponse defines model for GetResourcesResponse.
type GetResourcesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Resource    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetRoleEntitlementsResponse defines model for GetRoleEntitlementsResponse.
type GetRoleEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetRolesResponse defines model for GetRolesResponse.
type GetRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// Group defines model for Group.
type Group struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// GroupEntitlementsPatchItem defines model for GroupEntitlementsPatchItem.
type GroupEntitlementsPatchItem struct {
	Entitlement EntityEntitlement            `json:"entitlement"`
	Op          GroupEntitlementsPatchItemOp `json:"op"`
}

// GroupEntitlementsPatchItemOp defines model for GroupEntitlementsPatchItem.Op.
type GroupEntitlementsPatchItemOp string

// GroupEntitlementsPatchRequestBody defines model for GroupEntitlementsPatchRequestBody.
type GroupEntitlementsPatchRequestBody struct {
	Patches []GroupEntitlementsPatchItem `json:"patches"`
}

// GroupIdentitiesPatchItem defines model for GroupIdentitiesPatchItem.
type GroupIdentitiesPatchItem struct {
	Identity string                     `json:"identity"`
	Op       GroupIdentitiesPatchItemOp `json:"op"`
}

// GroupIdentitiesPatchItemOp defines model for GroupIdentitiesPatchItem.Op.
type GroupIdentitiesPatchItemOp string

// GroupIdentitiesPatchRequestBody defines model for GroupIdentitiesPatchRequestBody.
type GroupIdentitiesPatchRequestBody struct {
	Patches []GroupIdentitiesPatchItem `json:"patches"`
}

// GroupRolesPatchItem defines model for GroupRolesPatchItem.
type GroupRolesPatchItem struct {
	Op   GroupRolesPatchItemOp `json:"op"`
	Role string                `json:"role"`
}

// GroupRolesPatchItemOp defines model for GroupRolesPatchItem.Op.
type GroupRolesPatchItemOp string

// GroupRolesPatchRequestBody defines model for GroupRolesPatchRequestBody.
type GroupRolesPatchRequestBody struct {
	Patches []GroupRolesPatchItem `json:"patches"`
}

// Groups defines model for Groups.
type Groups struct {
	Data []Group `json:"data"`
}

// Identities defines model for Identities.
type Identities struct {
	Data []Identity `json:"data"`
}

// Identity defines model for Identity.
type Identity struct {
	AddedBy     string  `json:"addedBy"`
	Certificate *string `json:"certificate,omitempty"`
	Email       string  `json:"email"`
	FirstName   *string `json:"firstName,omitempty"`
	Groups      *int    `json:"groups,omitempty"`
	Id          *string `json:"id,omitempty"`
	Joined      *string `json:"joined,omitempty"`
	LastLogin   *string `json:"lastLogin,omitempty"`
	LastName    *string `json:"lastName,omitempty"`
	Permissions *int    `json:"permissions,omitempty"`
	Roles       *int    `json:"roles,omitempty"`
	Source      string  `json:"source"`
}

// IdentityEntitlementsPatchItem defines model for IdentityEntitlementsPatchItem.
type IdentityEntitlementsPatchItem struct {
	Entitlement EntityEntitlement               `json:"entitlement"`
	Op          IdentityEntitlementsPatchItemOp `json:"op"`
}

// IdentityEntitlementsPatchItemOp defines model for IdentityEntitlementsPatchItem.Op.
type IdentityEntitlementsPatchItemOp string

// IdentityEntitlementsPatchRequestBody defines model for IdentityEntitlementsPatchRequestBody.
type IdentityEntitlementsPatchRequestBody struct {
	Patches []IdentityEntitlementsPatchItem `json:"patches"`
}

// IdentityGroupsPatchItem defines model for IdentityGroupsPatchItem.
type IdentityGroupsPatchItem struct {
	Group string                    `json:"group"`
	Op    IdentityGroupsPatchItemOp `json:"op"`
}

// IdentityGroupsPatchItemOp defines model for IdentityGroupsPatchItem.Op.
type IdentityGroupsPatchItemOp string

// IdentityGroupsPatchRequestBody defines model for IdentityGroupsPatchRequestBody.
type IdentityGroupsPatchRequestBody struct {
	Patches []IdentityGroupsPatchItem `json:"patches"`
}

// IdentityProvider defines model for IdentityProvider.
type IdentityProvider struct {
	AcceptsPromptNone   *bool                     `json:"acceptsPromptNone,omitempty"`
	AccountLinkingOnly  *bool                     `json:"accountLinkingOnly,omitempty"`
	ClientID            *string                   `json:"clientID,omitempty"`
	ClientSecret        *string                   `json:"clientSecret,omitempty"`
	DisableIdentityInfo *bool                     `json:"disableIdentityInfo,omitempty"`
	Enabled             *bool                     `json:"enabled,omitempty"`
	Id                  *string                   `json:"id,omitempty"`
	IdentityCount       *int                      `json:"identityCount,omitempty"`
	Name                *string                   `json:"name,omitempty"`
	RedirectUrl         *string                   `json:"redirectUrl,omitempty"`
	StoreTokens         *bool                     `json:"storeTokens,omitempty"`
	StoreTokensReadable *bool                     `json:"storeTokensReadable,omitempty"`
	SyncMode            *IdentityProviderSyncMode `json:"syncMode,omitempty"`
	TrustEmail          *bool                     `json:"trustEmail,omitempty"`
}

// IdentityProviderSyncMode defines model for IdentityProvider.SyncMode.
type IdentityProviderSyncMode string

// IdentityRolesPatchItem defines model for IdentityRolesPatchItem.
type IdentityRolesPatchItem struct {
	Op   IdentityRolesPatchItemOp `json:"op"`
	Role string                   `json:"role"`
}

// IdentityRolesPatchItemOp defines model for IdentityRolesPatchItem.Op.
type IdentityRolesPatchItemOp string

// IdentityRolesPatchRequestBody defines model for IdentityRolesPatchRequestBody.
type IdentityRolesPatchRequestBody struct {
	Patches []IdentityRolesPatchItem `json:"patches"`
}

// Resource defines model for Resource.
type Resource struct {
	Entity Entity    `json:"entity"`
	Id     string    `json:"id"`
	Name   string    `json:"name"`
	Parent *Resource `json:"parent,omitempty"`
}

// Resources defines model for Resources.
type Resources struct {
	Data []Resource `json:"data"`
}

// Response defines model for Response.
type Response struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// ResponseLinks defines model for ResponseLinks.
type ResponseLinks struct {
	Next ResponseLinksNext `json:"next"`
}

// ResponseLinksNext defines model for ResponseLinksNext.
type ResponseLinksNext struct {
	Href string `json:"href"`
}

// ResponseMeta defines model for ResponseMeta.
type ResponseMeta struct {
	Page      *int    `json:"page,omitempty"`
	PageToken *string `json:"pageToken,omitempty"`
	Size      int     `json:"size"`
	Total     *int    `json:"total,omitempty"`
}

// Role defines model for Role.
type Role struct {
	Entitlements *[]RoleEntitlement `json:"entitlements,omitempty"`
	Id           *string            `json:"id,omitempty"`
	Name         string             `json:"name"`
}

// RoleEntitlement defines model for RoleEntitlement.
type RoleEntitlement struct {
	Entitlement *string `json:"entitlement,omitempty"`
	Entity      *Entity `json:"entity,omitempty"`
	Resource    *string `json:"resource,omitempty"`
}

// RoleEntitlementsPatchItem defines model for RoleEntitlementsPatchItem.
type RoleEntitlementsPatchItem struct {
	Entitlement EntityEntitlement           `json:"entitlement"`
	Op          RoleEntitlementsPatchItemOp `json:"op"`
}

// RoleEntitlementsPatchItemOp defines model for RoleEntitlementsPatchItem.Op.
type RoleEntitlementsPatchItemOp string

// RoleEntitlementsPatchRequestBody defines model for RoleEntitlementsPatchRequestBody.
type RoleEntitlementsPatchRequestBody struct {
	Patches []RoleEntitlementsPatchItem `json:"patches"`
}

// Roles defines model for Roles.
type Roles struct {
	Data []Role `json:"data"`
}

// FilterParam defines model for FilterParam.
type FilterParam = string

// PaginationNextToken defines model for PaginationNextToken.
type PaginationNextToken = string

// PaginationPage defines model for PaginationPage.
type PaginationPage = int

// PaginationSize defines model for PaginationSize.
type PaginationSize = int

// BadRequest defines model for BadRequest.
type BadRequest = Response

// NotFound defines model for NotFound.
type NotFound = Response

// Unauthorized defines model for Unauthorized.
type Unauthorized = Response

// Default defines model for default.
type Default = Response

// GetAuthenticationParams defines parameters for GetAuthentication.
type GetAuthenticationParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetAuthenticationProvidersParams defines parameters for GetAuthenticationProviders.
type GetAuthenticationProvidersParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetEntitlementsParams defines parameters for GetEntitlements.
type GetEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsParams defines parameters for GetGroups.
type GetGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsItemEntitlementsParams defines parameters for GetGroupsItemEntitlements.
type GetGroupsItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetGroupsItemIdentitiesParams defines parameters for GetGroupsItemIdentities.
type GetGroupsItemIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetGroupsItemRolesParams defines parameters for GetGroupsItemRoles.
type GetGroupsItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesParams defines parameters for GetIdentities.
type GetIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetIdentitiesItemEntitlementsParams defines parameters for GetIdentitiesItemEntitlements.
type GetIdentitiesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesItemGroupsParams defines parameters for GetIdentitiesItemGroups.
type GetIdentitiesItemGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesItemRolesParams defines parameters for GetIdentitiesItemRoles.
type GetIdentitiesItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetResourcesParams defines parameters for GetResources.
type GetResourcesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken  *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
	EntityType *string              `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// GetRolesParams defines parameters for GetRoles.
type GetRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetRolesItemEntitlementsParams defines parameters for GetRolesItemEntitlements.
type GetRolesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// PostAuthenticationJSONRequestBody defines body for PostAuthentication for application/json ContentType.
type PostAuthenticationJSONRequestBody = IdentityProvider

// PutAuthenticationItemJSONRequestBody defines body for PutAuthenticationItem for application/json ContentType.
type PutAuthenticationItemJSONRequestBody = IdentityProvider

// PostGroupsJSONRequestBody defines body for PostGroups for application/json ContentType.
type PostGroupsJSONRequestBody = Group

// PutGroupsItemJSONRequestBody defines body for PutGroupsItem for application/json ContentType.
type PutGroupsItemJSONRequestBody = Group

// PatchGroupsItemEntitlementsJSONRequestBody defines body for PatchGroupsItemEntitlements for application/json ContentType.
type PatchGroupsItemEntitlementsJSONRequestBody = GroupEntitlementsPatchRequestBody

// PatchGroupsItemIdentitiesJSONRequestBody defines body for PatchGroupsItemIdentities for application/json ContentType.
type PatchGroupsItemIdentitiesJSONRequestBody = GroupIdentitiesPatchRequestBody

// PatchGroupsItemRolesJSONRequestBody defines body for PatchGroupsItemRoles for application/json ContentType.
type PatchGroupsItemRolesJSONRequestBody = GroupRolesPatchRequestBody

// PostIdentitiesJSONRequestBody defines body for PostIdentities for application/json ContentType.
type PostIdentitiesJSONRequestBody = Identity

// PutIdentitiesItemJSONRequestBody defines body for PutIdentitiesItem for application/json ContentType.
type PutIdentitiesItemJSONRequestBody = Identity

// PatchIdentitiesItemEntitlementsJSONRequestBody defines body for PatchIdentitiesItemEntitlements for application/json ContentType.
type PatchIdentitiesItemEntitlementsJSONRequestBody = IdentityEntitlementsPatchRequestBody

// PatchIdentitiesItemGroupsJSONRequestBody defines body for PatchIdentitiesItemGroups for application/json ContentType.
type PatchIdentitiesItemGroupsJSONRequestBody = IdentityGroupsPatchRequestBody

// PatchIdentitiesItemRolesJSONRequestBody defines body for PatchIdentitiesItemRoles for application/json ContentType.
type PatchIdentitiesItemRolesJSONRequestBody = IdentityRolesPatchRequestBody

// PostRolesJSONRequestBody defines body for PostRoles for application/json ContentType.
type PostRolesJSONRequestBody = Role

// PutRolesItemJSONRequestBody defines body for PutRolesItem for application/json ContentType.
type PutRolesItemJSONRequestBody = Role

// PatchRolesItemEntitlementsJSONRequestBody defines body for PatchRolesItemEntitlements for application/json ContentType.
type PatchRolesItemEntitlementsJSONRequestBody = RoleEntitlementsPatchRequestBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"9c36/wEAAP//XApbXGaTAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
