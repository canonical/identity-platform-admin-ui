// Package resources provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package resources

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for CapabilityMethods.
const (
	DELETE CapabilityMethods = "DELETE"
	GET    CapabilityMethods = "GET"
	PATCH  CapabilityMethods = "PATCH"
	POST   CapabilityMethods = "POST"
)

// Defines values for GroupEntitlementsPatchItemOp.
const (
	GroupEntitlementsPatchItemOpAdd    GroupEntitlementsPatchItemOp = "add"
	GroupEntitlementsPatchItemOpRemove GroupEntitlementsPatchItemOp = "remove"
)

// Defines values for GroupIdentitiesPatchItemOp.
const (
	GroupIdentitiesPatchItemOpAdd    GroupIdentitiesPatchItemOp = "add"
	GroupIdentitiesPatchItemOpRemove GroupIdentitiesPatchItemOp = "remove"
)

// Defines values for GroupRolesPatchItemOp.
const (
	GroupRolesPatchItemOpAdd    GroupRolesPatchItemOp = "add"
	GroupRolesPatchItemOpRemove GroupRolesPatchItemOp = "remove"
)

// Defines values for IdentityEntitlementsPatchItemOp.
const (
	IdentityEntitlementsPatchItemOpAdd    IdentityEntitlementsPatchItemOp = "add"
	IdentityEntitlementsPatchItemOpRemove IdentityEntitlementsPatchItemOp = "remove"
)

// Defines values for IdentityGroupsPatchItemOp.
const (
	IdentityGroupsPatchItemOpAdd    IdentityGroupsPatchItemOp = "add"
	IdentityGroupsPatchItemOpRemove IdentityGroupsPatchItemOp = "remove"
)

// Defines values for IdentityProviderSyncMode.
const (
	Import IdentityProviderSyncMode = "import"
)

// Defines values for IdentityRolesPatchItemOp.
const (
	IdentityRolesPatchItemOpAdd    IdentityRolesPatchItemOp = "add"
	IdentityRolesPatchItemOpRemove IdentityRolesPatchItemOp = "remove"
)

// Defines values for RoleEntitlementsPatchItemOp.
const (
	Add    RoleEntitlementsPatchItemOp = "add"
	Remove RoleEntitlementsPatchItemOp = "remove"
)

// Capabilities defines model for Capabilities.
type Capabilities struct {
	Data []Capability `json:"data"`
}

// Capability defines model for Capability.
type Capability struct {
	Endpoint string              `json:"endpoint"`
	Methods  []CapabilityMethods `json:"methods"`
}

// CapabilityMethods defines model for Capability.Methods.
type CapabilityMethods string

// Entity defines model for Entity.
type Entity = map[string]interface{}

// EntityEntitlement defines model for EntityEntitlement.
type EntityEntitlement struct {
	EntitlementType string `json:"entitlement_type"`
	EntityName      string `json:"entity_name"`
	EntityType      string `json:"entity_type"`
}

// EntityEntitlementItem defines model for EntityEntitlementItem.
type EntityEntitlementItem struct {
	Entitlement EntityEntitlement `json:"entitlement"`
}

// GetCapabilitiesResponse defines model for GetCapabilitiesResponse.
type GetCapabilitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Capability  `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetEntitlementsResponse defines model for GetEntitlementsResponse.
type GetEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupEntitlementsResponse defines model for GetGroupEntitlementsResponse.
type GetGroupEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupIdentitiesResponse defines model for GetGroupIdentitiesResponse.
type GetGroupIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupRolesResponse defines model for GetGroupRolesResponse.
type GetGroupRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupsResponse defines model for GetGroupsResponse.
type GetGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentitiesResponse defines model for GetIdentitiesResponse.
type GetIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityEntitlementsResponse defines model for GetIdentityEntitlementsResponse.
type GetIdentityEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetIdentityGroupsResponse defines model for GetIdentityGroupsResponse.
type GetIdentityGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityProvidersResponse defines model for GetIdentityProvidersResponse.
type GetIdentityProvidersResponse struct {
	Links ResponseLinks `json:"_links"`
	Meta  ResponseMeta  `json:"_meta"`
	Data  []struct {
		Id   string `json:"id"`
		Name string `json:"name"`
	} `json:"data"`
	Message string `json:"message"`
	Status  int    `json:"status"`
}

// GetIdentityRolesResponse defines model for GetIdentityRolesResponse.
type GetIdentityRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetResourcesResponse defines model for GetResourcesResponse.
type GetResourcesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Resource    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetRoleEntitlementsResponse defines model for GetRoleEntitlementsResponse.
type GetRoleEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetRolesResponse defines model for GetRolesResponse.
type GetRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// Group defines model for Group.
type Group struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// GroupEntitlementsPatchItem defines model for GroupEntitlementsPatchItem.
type GroupEntitlementsPatchItem struct {
	Entitlement EntityEntitlement            `json:"entitlement"`
	Op          GroupEntitlementsPatchItemOp `json:"op"`
}

// GroupEntitlementsPatchItemOp defines model for GroupEntitlementsPatchItem.Op.
type GroupEntitlementsPatchItemOp string

// GroupEntitlementsPatchRequestBody defines model for GroupEntitlementsPatchRequestBody.
type GroupEntitlementsPatchRequestBody struct {
	Patches []GroupEntitlementsPatchItem `json:"patches"`
}

// GroupIdentitiesPatchItem defines model for GroupIdentitiesPatchItem.
type GroupIdentitiesPatchItem struct {
	Identity string                     `json:"identity"`
	Op       GroupIdentitiesPatchItemOp `json:"op"`
}

// GroupIdentitiesPatchItemOp defines model for GroupIdentitiesPatchItem.Op.
type GroupIdentitiesPatchItemOp string

// GroupIdentitiesPatchRequestBody defines model for GroupIdentitiesPatchRequestBody.
type GroupIdentitiesPatchRequestBody struct {
	Patches []GroupIdentitiesPatchItem `json:"patches"`
}

// GroupRolesPatchItem defines model for GroupRolesPatchItem.
type GroupRolesPatchItem struct {
	Op   GroupRolesPatchItemOp `json:"op"`
	Role string                `json:"role"`
}

// GroupRolesPatchItemOp defines model for GroupRolesPatchItem.Op.
type GroupRolesPatchItemOp string

// GroupRolesPatchRequestBody defines model for GroupRolesPatchRequestBody.
type GroupRolesPatchRequestBody struct {
	Patches []GroupRolesPatchItem `json:"patches"`
}

// Groups defines model for Groups.
type Groups struct {
	Data []Group `json:"data"`
}

// Identities defines model for Identities.
type Identities struct {
	Data []Identity `json:"data"`
}

// Identity defines model for Identity.
type Identity struct {
	AddedBy     string  `json:"addedBy"`
	Certificate *string `json:"certificate,omitempty"`
	Email       string  `json:"email"`
	FirstName   *string `json:"firstName,omitempty"`
	Groups      *int    `json:"groups,omitempty"`
	Id          *string `json:"id,omitempty"`
	Joined      *string `json:"joined,omitempty"`
	LastLogin   *string `json:"lastLogin,omitempty"`
	LastName    *string `json:"lastName,omitempty"`
	Permissions *int    `json:"permissions,omitempty"`
	Roles       *int    `json:"roles,omitempty"`
	Source      string  `json:"source"`
}

// IdentityEntitlementsPatchItem defines model for IdentityEntitlementsPatchItem.
type IdentityEntitlementsPatchItem struct {
	Entitlement EntityEntitlement               `json:"entitlement"`
	Op          IdentityEntitlementsPatchItemOp `json:"op"`
}

// IdentityEntitlementsPatchItemOp defines model for IdentityEntitlementsPatchItem.Op.
type IdentityEntitlementsPatchItemOp string

// IdentityEntitlementsPatchRequestBody defines model for IdentityEntitlementsPatchRequestBody.
type IdentityEntitlementsPatchRequestBody struct {
	Patches []IdentityEntitlementsPatchItem `json:"patches"`
}

// IdentityGroupsPatchItem defines model for IdentityGroupsPatchItem.
type IdentityGroupsPatchItem struct {
	Group string                    `json:"group"`
	Op    IdentityGroupsPatchItemOp `json:"op"`
}

// IdentityGroupsPatchItemOp defines model for IdentityGroupsPatchItem.Op.
type IdentityGroupsPatchItemOp string

// IdentityGroupsPatchRequestBody defines model for IdentityGroupsPatchRequestBody.
type IdentityGroupsPatchRequestBody struct {
	Patches []IdentityGroupsPatchItem `json:"patches"`
}

// IdentityProvider defines model for IdentityProvider.
type IdentityProvider struct {
	AcceptsPromptNone   *bool                     `json:"acceptsPromptNone,omitempty"`
	AccountLinkingOnly  *bool                     `json:"accountLinkingOnly,omitempty"`
	ClientID            *string                   `json:"clientID,omitempty"`
	ClientSecret        *string                   `json:"clientSecret,omitempty"`
	DisableIdentityInfo *bool                     `json:"disableIdentityInfo,omitempty"`
	Enabled             *bool                     `json:"enabled,omitempty"`
	Id                  *string                   `json:"id,omitempty"`
	IdentityCount       *int                      `json:"identityCount,omitempty"`
	Name                *string                   `json:"name,omitempty"`
	RedirectUrl         *string                   `json:"redirectUrl,omitempty"`
	StoreTokens         *bool                     `json:"storeTokens,omitempty"`
	StoreTokensReadable *bool                     `json:"storeTokensReadable,omitempty"`
	SyncMode            *IdentityProviderSyncMode `json:"syncMode,omitempty"`
	TrustEmail          *bool                     `json:"trustEmail,omitempty"`
}

// IdentityProviderSyncMode defines model for IdentityProvider.SyncMode.
type IdentityProviderSyncMode string

// IdentityRolesPatchItem defines model for IdentityRolesPatchItem.
type IdentityRolesPatchItem struct {
	Op   IdentityRolesPatchItemOp `json:"op"`
	Role string                   `json:"role"`
}

// IdentityRolesPatchItemOp defines model for IdentityRolesPatchItem.Op.
type IdentityRolesPatchItemOp string

// IdentityRolesPatchRequestBody defines model for IdentityRolesPatchRequestBody.
type IdentityRolesPatchRequestBody struct {
	Patches []IdentityRolesPatchItem `json:"patches"`
}

// Resource defines model for Resource.
type Resource struct {
	Entity Entity    `json:"entity"`
	Id     string    `json:"id"`
	Name   string    `json:"name"`
	Parent *Resource `json:"parent,omitempty"`
}

// Resources defines model for Resources.
type Resources struct {
	Data []Resource `json:"data"`
}

// Response defines model for Response.
type Response struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// ResponseLinks defines model for ResponseLinks.
type ResponseLinks struct {
	Next ResponseLinksNext `json:"next"`
}

// ResponseLinksNext defines model for ResponseLinksNext.
type ResponseLinksNext struct {
	Href string `json:"href"`
}

// ResponseMeta defines model for ResponseMeta.
type ResponseMeta struct {
	Page      *int    `json:"page,omitempty"`
	PageToken *string `json:"pageToken,omitempty"`
	Size      int     `json:"size"`
	Total     *int    `json:"total,omitempty"`
}

// Role defines model for Role.
type Role struct {
	Entitlements *[]RoleEntitlement `json:"entitlements,omitempty"`
	Id           *string            `json:"id,omitempty"`
	Name         string             `json:"name"`
}

// RoleEntitlement defines model for RoleEntitlement.
type RoleEntitlement struct {
	Entitlement *string `json:"entitlement,omitempty"`
	Entity      *Entity `json:"entity,omitempty"`
	Resource    *string `json:"resource,omitempty"`
}

// RoleEntitlementsPatchItem defines model for RoleEntitlementsPatchItem.
type RoleEntitlementsPatchItem struct {
	Entitlement EntityEntitlement           `json:"entitlement"`
	Op          RoleEntitlementsPatchItemOp `json:"op"`
}

// RoleEntitlementsPatchItemOp defines model for RoleEntitlementsPatchItem.Op.
type RoleEntitlementsPatchItemOp string

// RoleEntitlementsPatchRequestBody defines model for RoleEntitlementsPatchRequestBody.
type RoleEntitlementsPatchRequestBody struct {
	Patches []RoleEntitlementsPatchItem `json:"patches"`
}

// Roles defines model for Roles.
type Roles struct {
	Data []Role `json:"data"`
}

// FilterParam defines model for FilterParam.
type FilterParam = string

// PaginationNextToken defines model for PaginationNextToken.
type PaginationNextToken = string

// PaginationPage defines model for PaginationPage.
type PaginationPage = int

// PaginationSize defines model for PaginationSize.
type PaginationSize = int

// BadRequest defines model for BadRequest.
type BadRequest = Response

// NotFound defines model for NotFound.
type NotFound = Response

// Unauthorized defines model for Unauthorized.
type Unauthorized = Response

// Default defines model for default.
type Default = Response

// GetAuthenticationParams defines parameters for GetAuthentication.
type GetAuthenticationParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetAuthenticationProvidersParams defines parameters for GetAuthenticationProviders.
type GetAuthenticationProvidersParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetEntitlementsParams defines parameters for GetEntitlements.
type GetEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsParams defines parameters for GetGroups.
type GetGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsItemEntitlementsParams defines parameters for GetGroupsItemEntitlements.
type GetGroupsItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetGroupsItemIdentitiesParams defines parameters for GetGroupsItemIdentities.
type GetGroupsItemIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetGroupsItemRolesParams defines parameters for GetGroupsItemRoles.
type GetGroupsItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesParams defines parameters for GetIdentities.
type GetIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetIdentitiesItemEntitlementsParams defines parameters for GetIdentitiesItemEntitlements.
type GetIdentitiesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesItemGroupsParams defines parameters for GetIdentitiesItemGroups.
type GetIdentitiesItemGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetIdentitiesItemRolesParams defines parameters for GetIdentitiesItemRoles.
type GetIdentitiesItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// GetResourcesParams defines parameters for GetResources.
type GetResourcesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken  *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
	EntityType *string              `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// GetRolesParams defines parameters for GetRoles.
type GetRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetRolesItemEntitlementsParams defines parameters for GetRolesItemEntitlements.
type GetRolesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
}

// PostAuthenticationJSONRequestBody defines body for PostAuthentication for application/json ContentType.
type PostAuthenticationJSONRequestBody = IdentityProvider

// PutAuthenticationItemJSONRequestBody defines body for PutAuthenticationItem for application/json ContentType.
type PutAuthenticationItemJSONRequestBody = IdentityProvider

// PostGroupsJSONRequestBody defines body for PostGroups for application/json ContentType.
type PostGroupsJSONRequestBody = Group

// PutGroupsItemJSONRequestBody defines body for PutGroupsItem for application/json ContentType.
type PutGroupsItemJSONRequestBody = Group

// PatchGroupsItemEntitlementsJSONRequestBody defines body for PatchGroupsItemEntitlements for application/json ContentType.
type PatchGroupsItemEntitlementsJSONRequestBody = GroupEntitlementsPatchRequestBody

// PatchGroupsItemIdentitiesJSONRequestBody defines body for PatchGroupsItemIdentities for application/json ContentType.
type PatchGroupsItemIdentitiesJSONRequestBody = GroupIdentitiesPatchRequestBody

// PatchGroupsItemRolesJSONRequestBody defines body for PatchGroupsItemRoles for application/json ContentType.
type PatchGroupsItemRolesJSONRequestBody = GroupRolesPatchRequestBody

// PostIdentitiesJSONRequestBody defines body for PostIdentities for application/json ContentType.
type PostIdentitiesJSONRequestBody = Identity

// PutIdentitiesItemJSONRequestBody defines body for PutIdentitiesItem for application/json ContentType.
type PutIdentitiesItemJSONRequestBody = Identity

// PatchIdentitiesItemEntitlementsJSONRequestBody defines body for PatchIdentitiesItemEntitlements for application/json ContentType.
type PatchIdentitiesItemEntitlementsJSONRequestBody = IdentityEntitlementsPatchRequestBody

// PatchIdentitiesItemGroupsJSONRequestBody defines body for PatchIdentitiesItemGroups for application/json ContentType.
type PatchIdentitiesItemGroupsJSONRequestBody = IdentityGroupsPatchRequestBody

// PatchIdentitiesItemRolesJSONRequestBody defines body for PatchIdentitiesItemRoles for application/json ContentType.
type PatchIdentitiesItemRolesJSONRequestBody = IdentityRolesPatchRequestBody

// PostRolesJSONRequestBody defines body for PostRoles for application/json ContentType.
type PostRolesJSONRequestBody = Role

// PatchRolesItemJSONRequestBody defines body for PatchRolesItem for application/json ContentType.
type PatchRolesItemJSONRequestBody = Role

// PatchRolesItemEntitlementsJSONRequestBody defines body for PatchRolesItemEntitlements for application/json ContentType.
type PatchRolesItemEntitlementsJSONRequestBody = RoleEntitlementsPatchRequestBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xdS3PbOBL+KyjsnlKM5exkLzqtJ8l4PJuxXY5Te8i4UhDZkjAmAQ4A2tG49N+3APBN",
	"8CFLcuyIF1sS8Wg0ur9uoBvgA/Z5FHMGTEk8fcAxESQCBcJ8+4WGCsSl/k1/DUD6gsaKcoan+ARJJShb",
	"IMXR3BREAmQSKolmK+xhqgv9lYDQXxiJAE+xLYc9LP0lREQ3qlaxfmLbwuu1hy/JgjKiezmHb+qa3wJr",
	"9n69BORzpihLTFGkdDlNiwAlKNwBUktADL4pJEEhPs+oayGN5X0Npe6SLMBNmACfiwDx+Vx3bWlKBMv5",
	"Mxc8aiEj1o2WKYgoo1ES4ekbL6OGMgULEDVyPtG/W8hhSTQDYVmgCZMlkmI7bTFnElpIkrrhCknkW0rS",
	"8bHXTeDaw1nrRqJ+JsEV/JWAVPqbnkBg5iOJ45D6ZiCTPyU3Mw7fSBSHZlBfQ8puTQt6nvT/pYA5nmLD",
	"hK8RKGLFV0/JsWdp1h8UVyTE0+O1hwOiC3258XAEUpqSmh4kUoI8LBVRicTTt8e6fDHgf9q+/jEplGVi",
	"n8rJVcY8M9gq83Xr2XDXHj7n6heesOB5DP2cKzQ35JQH/nYnAy/aXnv4MyOJWnJB/4ZnMvQKReXRv9nJ",
	"6CvNm6dzkoTquYwdvsXgKwgQCMFFafz/3pHYN7pY582aAb0jMZnRkCpqQSEdtcTTLw8ZzQ8YWBBzqnmF",
	"JzQApmx5PRa15IEujU8/XOOb9c36xsOx4DGIrEnbygOmCiLZN5acnpWerRTDiBBkhS2A/ZVQoWX3i233",
	"Ji/EZ3+Cb3S71IaelQoxxUgaBqU0mhKxwDSe2uF5+PLik/73/sPHD9cf9PeT63e/logo2uokPaei6NM1",
	"kA+a0avGtNAAT3GSUK0vaR0ty4KHoQZ6PQEV18GUTylzUFomzDz0dI12eszfEKJUd+r8zR9+tfUdfDaF",
	"Vl+tTWt/3lK/wcuicLVpr0nNoFGdKYg6R9YnxE0+OYlOn7loOgVV1sxcwzVWheHF3MjBMEzwBiqcHub6",
	"xvZdIn3bvrfAAgcbHwcJ6ahOBU/iH3hoZzky71Feik6qnV/xcK/9mvarXe6zO9tB3t/3Ym360+rHlNps",
	"dN9pNleXgt/RAMSeWVp9TAOnzWsxhjV+Gptvirqsxg6m4mnV+AokT4S/3x6zPopeeQg/pkI95expldqx",
	"dLcKdsNyXxLlLzM/bdgg3W5ecwJ5XHb7SaA1TkDE78Dh59cGwOO2uXEOIN2P+JkHjpVKrEuAHCxLHTzq",
	"E6qsq1bWF5apwvj61EO+XmkIwDZczRv23Ax2E7l75rq4sDVrjUp1cHUjxnlY8HCAoplS3dws6No9I2tj",
	"3pqHDiu7EQxbLHv0fkPJb9uOjswIb02KY6JIEEDwc30zAfPbSkuFIPm66pz6RLWs0SNCQ+eTORVSnbet",
	"7Rf5hNU3qL024/Enpwzcj0Ii1Ue+oKz1aSshMYiISkk5a6FGGGPnfGQ9ijov4ZsCwUho9u7Tj73gZvmY",
	"N+nlE9U1vS/ZFLaOYac4082pbRCnumjpQO5F5iHt1BjaVlux20HdXvhaH/0uOJotxxzg5fsQK3kpeBSr",
	"c87KGj3jPATCdEPE93nC1EfKbilbXLBw5S7nh1QL/Xvn5NiHn8AX4N4lDqgksxAyqs/YnLu7AabLBe6H",
	"LViX+Trv9EDc4NO6bSogoAJ89Vm4gVkqLsDEVaWbplKBKyCBpr6l4Ir5v/MAymJMo5gL5d4LF4lUH2oG",
	"I29u3SESz9A7apK2FwXboY+UrYBb9rRXw1apHUKbSWTZGJJ7OYHk9T1It0zERAzYSc9Jb98Iyfb8O4e+",
	"rWdW0PFYz6y8Kq8SUkQXh6zRP5rC5bDjkFq/67LrUuzRCQ829Pjgym0ojzEtmJHgZSMomu9iwMdstFUu",
	"ZJHVwTw41xUaOwj6x97ez9O+qhTYmG4fOJhSXT38nkWDazBQ4XoJzvWTPLGmOSlpJkmzXhpb7p8t3YKT",
	"4BQMW8Ncw0GrtqPW1BJvTxtD9Y77onYtocbhCChKWNqkuY++F+esO+nfqb1r59BWJi9bu22D+Vo/Hon3",
	"uhhNHUOfM0V8I37pohmHyS0c3YMMYfV6ycMQVv/xCeOM+iQ88k1CWprw9TG5BfQ/W/JXUxI3cjyul4Dm",
	"PAz5PWULJGPw7cKdcoZ4okLKQJoMvJPLM5QRj+ZcmB9/OT1BJIgoo1IJW2kuTGpMgBRHZiVLfIXuqVoi",
	"wtBFDEzXoUwqwnxAail4slgigmLBg8RXUnd0hK6XVCIqdR244+FdkzgikYB5aNNTKDPk3IHQa/I0Ue7o",
	"D4Y9bKQDT/G7jEc5ESdVwi8tAegdj2KiqE0C0dRgD6cN4yk+Pjo+enNsF2LASEzxFP909OboGGs0Vksj",
	"GROSqKVGB0urWdDZBUGd+VSiLJ8DhVQqiUgYotT51zyxMSY7FC2NpsGzAE/xKaiTajfV3I0WaCiKTGo5",
	"h20b+M4aJmlyoxpFEuj6ppZN+K/j4wFJVcMSmjpDdI4kp4v/6sl8aylwNZxTOiklPZoqb/qr1FPI3h6/",
	"7a+U5xdWc866K2UFTY5WEkVErDQEUKmQz9mcLhKtuFXBLAmY1hSysN53Vao0lMdcOsT3XdYuIojBfVvj",
	"Rw3RveSyKbuiahl2IgyN3YF1FYOVSGC9R2F0939IAriBjLTK39qrI+okF9yB2CqXPAmDLFmaGKxFfJ71",
	"L9Et4/cm7VzbEbmSCiLPmLl0XYoubhXx0CnnixA8dErVr8kMgfKP/kiOj3/yZwJNzCf4g716dX3x/uLV",
	"qyl6jT4Zo7Uyzaa9a3M/BM9z+DocYN99BH1HeQ6HprZXRlSt55fpikzimAvjbqWwNtB+OPT3gQZrq7Mh",
	"KMdxhyuz+NDuXwtg5EbN/Nw0Me9Nw1WFMisDt4Qe1txuzNsO18AJvqegEEGSskUIw92CBgJ2TNhonnci",
	"C0Mnqss3rJomc/JIr4SKdSgNcN3p6jqbdePhOHEI1ec4IGobTLhM2uTrWXmehyR/j5jTTjPj146kDHAN",
	"72kYohmgREKAZtZTK29iBFq2I8oA3S+pv0SfzxCk+02ZWzmDfMlebGhEJI4pWxyhkzBE5I7QUJfI+y1X",
	"1hYWArQE7SaHnC3shommpKiYHvZwwmYlEX+/i2vn0YIW3Ox1KQpmUO1ka6Zmk0DtTlBpwitza6e7vuHc",
	"Mt2A6kPOz0oab9zKQOaeLwH99uniHKWaIa1ARjyA0Mn88g7ky3HV+6uVTw3ve8vGmVJ7kNa4qh4FVxBl",
	"ViznXERElRWjogVNxZgIct+pHAq+qUkcEtqnFoLcD9aKK3JfU4we+SmoqEpO3T0YZaKQCSLNnGjW9QhE",
	"kTrX7rCHIbLFnBOaZkuOAPcogKsdUznMhUZFwDJhTSWzY5tZgPERzf6hKe3eUc4FdB/+fJrm+7Tbx6VO",
	"D2rP2DnhDXkpYG3wdlKb+NjdIitA4y5RZZeoYwKGbP60MDxHxH1v8YzQ2zIfLvh96p2cVjRP6tIxAvqP",
	"sMszHMyHrexNdNvmLVf9Yu0wm9bQksge9HmZy/encFfHRflqIyF7Kkglyl867nELAsQFEpnddpLMJ3PB",
	"ow7k1W236sZmOFxkdJsTZCcssD6FEcScvScsD7HzOZpxmyhGggARFmSjyYnEHr4jYQKVbMEvjVTN5k0y",
	"5Z9e659ek9qNL2mR1Wv9rfy03MAqq5uexDG5klqHH0HArJOAWScBs5yANE0zjVFvYIY6UzPXzSvfDtAH",
	"fqRK9Ro3Wjn02epEa4Apimr1IIP86bPyLVujPZt03HFzsNuJrXL1nIxYichNLVdFB56v3SruPcg/GtNT",
	"sS2uQjO8Lf53XHkwxqr7rUG3bPaagPyAeCf6m1LDgd+eXBgxv4T51VttDhbuXYL0vJYrmsJck/KlVS/O",
	"ZyL/fCE+h/LsCLH5Z5YQDxUIrz6fPQLS3ceKRzQf4tu3y58Tywe68FnUtijuhPCX6LE/r/jq6Nt3CVwm",
	"wiWpbY+3nhiAy5O83cHWLfzrzRIov9eRncMTH8e8O+WmCn8bpPK3S5SNvxYyNcZga5n6vZMyJBbbzv8K",
	"gD5V1v2BR2IHTOl3SK3vQP3EJSMj8P9ISfiPwf4NQrWN8Fl+kKwtTFuVuDFU23HafYzWrgbL2VPi7ZDt",
	"jxLBxW5iJxibm066lGOM1f4YsdpBV16O4drVY3RqsInryZ43oGPLVOGGSkRQBOlr2wZYuJeWZP9Etu3Q",
	"Uzg3ELDnZtoq5A6L4raoxPO1aOltvfZ/M35bfbxV5Lbnit7RDqw2FsDBRqA7ZGtU1IbZiJR0wSDIrpPZ",
	"YN9ljOC64P/Ag7gDReuFIL8eyCDgH0O7bbc6j5D/KMjPJK8V8UX5xufOxJwszFZcz5DXdZ+Gzlt+SfFd",
	"11ukLVev7RszCwF2nCpfxZAfWF6V3i5u3iruAJV9WpLmy8IO/iB5i+hmylHoQqobgxLWssZNabcmvCwP",
	"53llOYzZbG4py4XWCNfAo+QtjgiX6nGex8AXbpuboXcf2trmWupDPl9edwoyEcoxrzfBwSYvtHq29rER",
	"qTGtwfC/wbCm+vYnM7iZnWHkvnMYCi0+2PyF9sl7+nPkHWvKqji8HDwfpa/1FPkwyB6Wl5C5FJWQscmT",
	"7weYMR2hxUUdUxFWg0TriaBzF+fFhyDsmIHwQ2Yg9L7HZ9yCXD1an1w2TN6TxQLEUaYaAy6xFaXLVctX",
	"qV7EwE4uz8y7c7z0Als/u3bW3Hg75wIFMEsWC8oWHpoJfi/NJ10toNLndyBWnnnVQUP/P1lKf5PpGzy2",
	"MCuDrnlsvVC2PE5EJCLpXZm0ymXzzrlU9kHcZTBb7SgOiQ9LHgYgsIcTEeIpXioVy+lkUnp25PNocvfG",
	"GNS0/QbEsmKGzE3C+uHM7k+Xb7PVWJa+Y6kA+sp1txo0HPFGEob1i5PTa4KL7b2ixdqNyc02T5DPwxB8",
	"+/an8iGSsv3Jf+tvYJHF7tPK6ff+iiLdgUnr2a/91aBqgcpAmf06oO/SXn3Wf/7T+mb9/wAAAP//1yOl",
	"sWyTAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
